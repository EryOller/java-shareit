DROP TABLE IF EXISTS comments, bookings, items, requests, users;

CREATE TABLE IF NOT EXISTS users
( id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name varchar(255) NOT NULL,
email varchar(512) NOT NULL,
CONSTRAINT pk_user PRIMARY KEY (id),
CONSTRAINT UQ_USER_EMAIL UNIQUE (email));

CREATE TABLE IF NOT EXISTS requests
( id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
description  VARCHAR(2000),
requester_id int,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT pk_request_id PRIMARY KEY (id),
CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id) );

CREATE TABLE IF NOT EXISTS items
( id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
name varchar(255),
description varchar(255),
is_available boolean,
owner_id int,
request_id int,
CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id),
CONSTRAINT fk_items_to_requests FOREIGN KEY (request_id) REFERENCES requests (id) );

CREATE TABLE IF NOT EXISTS bookings
( id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
start_date TIMESTAMP WITHOUT TIME ZONE,
end_date TIMESTAMP WITHOUT TIME ZONE,
item_id int,
booker_id int,
status varchar(255),
CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id) );

CREATE TABLE IF NOT EXISTS comments
( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
text VARCHAR(512) NOT NULL,
item_id BIGINT,
author_id BIGINT,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT pk_comment_id PRIMARY KEY (id),
CONSTRAINT fk_item_id_comment FOREIGN KEY (item_id) REFERENCES items (id),
CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id) );